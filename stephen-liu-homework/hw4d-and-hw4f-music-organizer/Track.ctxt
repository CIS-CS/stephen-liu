#BlueJ class context
comment0.params=filename
comment0.target=Track(java.lang.String)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Track.\n\ It\ is\ assumed\ that\ the\ file\ name\ cannot\ be\n\ decoded\ to\ extract\ artist\ and\ title\ details.\n\ @param\ filename\ The\ track\ file.\ \n
comment1.params=artist\ title\ filename\ length\ year
comment1.target=Track(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Track.\n\ @param\ artist\ The\ track's\ artist.\n\ @param\ title\ The\ track's\ title.\n\ @param\ filename\ The\ track\ file.\ \n\ \n\ FOR\ EXERCISE\ 4d\:\n\ @param\ length\ The\ track\ length.\n\ @param\ year\ The\ year\ the\ track\ was\ written.\n
comment2.params=
comment2.target=java.lang.String\ getArtist()
comment2.text=\n\ Return\ the\ artist.\n\ @return\ The\ artist.\n
comment3.params=
comment3.target=java.lang.String\ getTitle()
comment3.text=\n\ Return\ the\ title.\n\ @return\ The\ title.\n
comment4.params=
comment4.target=java.lang.String\ getFilename()
comment4.text=\n\ Return\ the\ file\ name.\n\ @return\ The\ file\ name.\n
comment5.params=
comment5.target=java.lang.String\ getDetails()
comment5.text=\n\ Return\ details\ of\ the\ track\:\ artist,\ title\ and\ file\ name.\n\ @return\ The\ track's\ details.\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment7.params=
comment7.target=int\ getLength()
comment7.text=\n\ Return\ the\ length\ of\ the\ song.\n\ @return\ The\ length\ of\ the\ song.\n
comment8.params=
comment8.target=int\ getYear()
comment8.text=\n\ Return\ the\ year\ the\ song\ was\ written.\n\ @return\ The\ year\ the\ song\ was\ written.\n
numComments=9
